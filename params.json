{"name":"Liz","body":"#Template Management for Hogan.js\r\n\r\nLiz is a manger for [Hogan.js](http://twitter.github.com/hogan.js/) templates that lets you organize and manage your JS templates in any file and directory structure that you want - it then compiles all your templates into one compact executable JS file. \r\n\r\nLiz can also be adapted to help you with plain [Mustache](http://mustache.github.com/) (or any other) templating engine. It is similar to [`hulk`](https://github.com/twitter/hogan.js/blob/master/bin/hulk), except that you don't need to have one template per file. Liz also **namespaces** your temlates based so you can access them easily in code.  \r\n\r\n###Usage\r\n\r\nFirst do:\r\n\r\n```\r\n$ npm install liz -g\r\n$ liz <input_files> -o <output_file>\r\n```\r\nThen write your templates in `template` or `script` tags:\r\n    \r\n    <!--templates/users.html-->\r\n\r\n    <template name=\"user.greeting\">\r\n        <p>Hello, {{name}}</p>\r\n    </template>\r\n\r\n    <script name=\"user.outro\" type=\"text/x-mustache\">\r\n        </p></div>And that's the end of it.\r\n    </script>\r\n\r\nUsing `template` tags is usually easier - most editors will continue to give you HTML syntax highlighting and help. Or you can use `script` tags like [John Resig says](http://ejohn.org/blog/javascript-micro-templating/); especially when you're writing templates that don't validate as HTML.\r\n\r\nThen run:\r\n\r\n    $ liz templates/**/*.html -o templates.js\r\n\r\nAnd you have:   \r\n\r\n\r\n    // templates.js \r\n    var hogan = require('hogan.js');\r\n    exports.user = {};\r\n    exports.user.greeting = new Hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"<p>Hello, \");_.b(_.v(_.f(\"name\",c,p,0)));_.b(\"</p>\");return _.fl();;});\r\n    exports.user.outro = new Hogan.Template(function(c,p,i){var _=this;_.b(i=i||\"\");_.b(\"</p></div>And that's the end of it.\");return _.fl();;});\r\n\r\nYou can then render templates easily in your code:\r\n\r\n    templates = require('./templates');\r\n    templates.user.greeting.render({name: 'Miss Elizabeth'});\r\n    \r\n###Roadmap\r\n* Browsers will work only if your project uses [Stitch][stitch] or [OneJS](https://github.com/azer/onejs) - change this so `require` and `exports` code can be turned off with a flag. \r\n* Support for other templating engines. \r\n\r\n###Contributions\r\nWell tested (preferably TDD'd) contributions are welcome via pull requests. Personally Liz already fits all my needs - I'm using Hogan.js and [Stitch][stitch] - so most of the roadmap will have to be driven by contributions. \r\n\r\n[stitch]:https://github.com/sstephenson/stitch\r\n\r\n","tagline":"Template manager for Hogan.js","google":"UA-27684561-2","note":"Don't delete this file! It's used internally to help with page regeneration."}